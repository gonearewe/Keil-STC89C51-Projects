C51 COMPILER V9.54   TASK_6_NEW                                                            12/01/2018 11:00:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TASK_6_NEW
OBJECT MODULE PLACED IN .\Objects\Task 6 New.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Task 6 New.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\Task 6 New.lst) TABS(2) OBJECT(.\Objects\Task 6 New.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          sbit ADDR0 = P2^4;
   4          sbit ADDR1 = P2^3;
   5          sbit ADDR2 = P2^2;
   6          sbit ADDR3 = P1^3;
   7          sbit ENLED = P1^4;
   8          sbit KEY_IN_1  = P1^4;
   9          sbit KEY_IN_2  = P1^5;
  10          sbit KEY_IN_3  = P1^6;
  11          sbit KEY_IN_4  = P1^7;
  12          sbit KEY_OUT_1 = P1^3;
  13          sbit KEY_OUT_2 = P1^2;
  14          sbit KEY_OUT_3 = P1^1;
  15          sbit KEY_OUT_4 = P1^0;
  16          
  17          unsigned char code LedChar[] = {  //??????????
  18              0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  19                    0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71
  20          };
  21          unsigned char LedBuff[6] = {  //????????
  22              0, 0, 0, 0, 0, 0
  23          };
  24          unsigned char code KeyCodeMap[4][4] = { //?????????????????
  25              { 0x31, 0x32, 0x33, 0x26 }, //???1????2????3????
  26              { 0x34, 0x35, 0x36, 0x25 }, //???4????5????6????
  27              { 0x37, 0x38, 0x39, 0x28 }, //???7????8????9????
  28              { 0x30, 0x1B, 0x0D, 0x27 }  //???0?ESC??  ???? ???
  29          };
  30          unsigned char KeySta[4][4] = {  //???????????
  31              {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1}
  32          };
  33          
  34          void KeyDriver();
  35          
  36          void main()
  37          {
  38   1          EA = 1;       //?????
  39   1          //ENLED = 0;    //?????????
  40   1          //ADDR3 = 1;
  41   1          TMOD = 0x01;  //??T0???1
  42   1          TH0  = 0xFC;  //?T0???0xFC67,??1ms
  43   1          TL0  = 0x67;
  44   1          ET0  = 1;     //??T0??
  45   1          TR0  = 1;     //??T0
  46   1          LedBuff[0] = LedChar[0];  //????0
  47   1        
  48   1          while (1)
  49   1          {
  50   2              KeyDriver();   //????????
  51   2          }
  52   1      }
  53          /* ???????????????????,num-????? */
  54          void ShowNumber(long num)
C51 COMPILER V9.54   TASK_6_NEW                                                            12/01/2018 11:00:51 PAGE 2   

  55          {
  56   1          signed char i;
  57   1          unsigned char sign;
  58   1          unsigned char buf[6];
  59   1          
  60   1          if (num < 0)  //??????????
  61   1          {
  62   2              sign = 1;
  63   2              num = -num;
  64   2          }
  65   1          else
  66   1          {
  67   2              sign = 0;
  68   2          }
  69   1          for (i=0; i<6; i++)   //????????6???????
  70   1          {
  71   2              buf[i] = num % 10;
  72   2              num = num / 10;
  73   2          }
  74   1          for (i=5; i>=1; i--)  //?????,??0?????,???0?????
  75   1          {
  76   2              if (buf[i] == 0)
  77   2                  LedBuff[i] = 0;
  78   2              else
  79   2                  break;
  80   2          }
  81   1          if (sign != 0)        //???,?????????
  82   1          {
  83   2              if (i < 5)        //???????6??????,??????????
  84   2              {
  85   3                  LedBuff[i+1] = 0xBF;
  86   3              }
  87   2          }
  88   1          for ( ; i>=0; i--)    //?????????????????
  89   1          {
  90   2              LedBuff[i] = LedChar[buf[i]];
  91   2          }
  92   1      }
  93          /* ??????,???????????,keycode-???? */
  94          void KeyAction(unsigned char keycode)
  95          {
  96   1          static char oprt = 0;    //?????????
  97   1          static long result = 0;  //????????
  98   1          static long addend = 0;  //?????????
  99   1          
 100   1          if ((keycode>=0x30) && (keycode<=0x39))  //??0-9???
 101   1          {
 102   2              addend = (addend*10)+(keycode-0x30); //???????,???????
 103   2              ShowNumber(addend);    //??????????
 104   2          }
 105   1          else if (keycode == 0x26)  //???????
 106   1          {
 107   2              oprt = 0;              //???????
 108   2              result = addend;       //????????,??????
 109   2              addend = 0;            //?????,??????????
 110   2              ShowNumber(addend);    //???????
 111   2          }
 112   1          else if (keycode == 0x28)  //???????
 113   1          {
 114   2              oprt = 1;              //???????
 115   2              result = addend;       //????????,??????
 116   2              addend = 0;            //?????,??????????
C51 COMPILER V9.54   TASK_6_NEW                                                            12/01/2018 11:00:51 PAGE 3   

 117   2              ShowNumber(addend);    //???????
 118   2          }
 119   1          else if (keycode == 0x0D)  //???,??????
 120   1          {
 121   2              if (oprt == 0)
 122   2              {
 123   3                  result += addend;  //??????
 124   3              }
 125   2              else
 126   2              {
 127   3                  result -= addend;  //??????
 128   3              }
 129   2              addend = 0;
 130   2              ShowNumber(result);    //??????????
 131   2          }
 132   1          else if (keycode == 0x1B)  //Esc?,????
 133   1          {
 134   2              addend = 0;
 135   2              result = 0;
 136   2              ShowNumber(addend);    //????????????
 137   2          }
 138   1      }
 139          /* ??????,??????,????????,???????? */
 140          void KeyDriver()
 141          {
 142   1          unsigned char i, j;
 143   1          static unsigned char backup[4][4] = {  //?????,???????
 144   1              {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1}
 145   1          };
 146   1          
 147   1          for (i=0; i<4; i++)  //????4*4?????
 148   1          {
 149   2              for (j=0; j<4; j++)
 150   2              {
 151   3                  if (backup[i][j] != KeySta[i][j])    //??????
 152   3                  {
 153   4                      if (backup[i][j] != 0)           //?????????
 154   4                      {
 155   5                          KeyAction(KeyCodeMap[i][j]); //????????
 156   5                      }
 157   4                      backup[i][j] = KeySta[i][j];     //?????????
 158   4                  }
 159   3              }
 160   2          }
 161   1      }
 162          /* ??????,?????????,??????1ms */
 163          void KeyScan()
 164          {
 165   1          unsigned char i;
 166   1          static unsigned char keyout = 0;   //??????????
 167   1          static unsigned char keybuf[4][4] = {  //?????????
 168   1              {0xFF, 0xFF, 0xFF, 0xFF},  {0xFF, 0xFF, 0xFF, 0xFF},
 169   1              {0xFF, 0xFF, 0xFF, 0xFF},  {0xFF, 0xFF, 0xFF, 0xFF}
 170   1          };
 171   1      
 172   1          //????4?????????
 173   1          keybuf[keyout][0] = (keybuf[keyout][0] << 1) | KEY_IN_1;
 174   1          keybuf[keyout][1] = (keybuf[keyout][1] << 1) | KEY_IN_2;
 175   1          keybuf[keyout][2] = (keybuf[keyout][2] << 1) | KEY_IN_3;
 176   1          keybuf[keyout][3] = (keybuf[keyout][3] << 1) | KEY_IN_4;
 177   1          //?????????
 178   1          for (i=0; i<4; i++)  //??4???,????4?
C51 COMPILER V9.54   TASK_6_NEW                                                            12/01/2018 11:00:51 PAGE 4   

 179   1          {
 180   2              if ((keybuf[keyout][i] & 0x0F) == 0x00)
 181   2              {   //??4?????0,?4*4ms????????,???????????
 182   3                  KeySta[keyout][i] = 0;
 183   3              }
 184   2              else if ((keybuf[keyout][i] & 0x0F) == 0x0F)
 185   2              {   //??4?????1,?4*4ms????????,???????????
 186   3                  KeySta[keyout][i] = 1;
 187   3              }
 188   2          }
 189   1          //??????????
 190   1          keyout++;                //??????
 191   1          keyout = keyout & 0x03;  //?????4???
 192   1          switch (keyout)          //????,????????,?????????
 193   1          {
 194   2              case 0: KEY_OUT_4 = 1; KEY_OUT_1 = 0; break;
 195   2              case 1: KEY_OUT_1 = 1; KEY_OUT_2 = 0; break;
 196   2              case 2: KEY_OUT_2 = 1; KEY_OUT_3 = 0; break;
 197   2              case 3: KEY_OUT_3 = 1; KEY_OUT_4 = 0; break;
 198   2              default: break;
 199   2          }
 200   1      }
 201          /* ???????????,????????? */
 202          void LedScan()
 203          {
 204   1          static unsigned char i = 0;  //???????
 205   1          
 206   1          P0 = 0xFF;   //????
 207   1          switch (i)
 208   1          {
 209   2              case 0: ADDR2=0; ADDR1=0; ADDR0=0; i++; P0=LedBuff[0]; break;
 210   2              case 1: ADDR2=0; ADDR1=0; ADDR0=1; i++; P0=LedBuff[1]; break;
 211   2              case 2: ADDR2=0; ADDR1=1; ADDR0=0; i++; P0=LedBuff[2]; break;
 212   2              case 3: ADDR2=0; ADDR1=1; ADDR0=1; i++; P0=LedBuff[3]; break;
 213   2              case 4: ADDR2=1; ADDR1=0; ADDR0=0; i++; P0=LedBuff[4]; break;
 214   2              case 5: ADDR2=1; ADDR1=0; ADDR0=1; i=0; P0=LedBuff[5]; break;
 215   2              default: break;
 216   2          }
 217   1      }
 218          /* T0??????,?????????????? */
 219          void InterruptTimer0() interrupt 1
 220          {
 221   1          TH0 = 0xFC;  //??????
 222   1          TL0 = 0x67;
 223   1          LedScan();   //???????????
 224   1          KeyScan();   //????????
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    921    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
