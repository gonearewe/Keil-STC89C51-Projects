C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TASK_4
OBJECT MODULE PLACED IN .\Objects\Task 4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Task 4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Ta
                    -sk 4.lst) TABS(2) OBJECT(.\Objects\Task 4.obj)

line level    source

   1          #include <reg52.h>
   2          #include <math.h>
   3          #include <intrins.h>
   4          
   5          typedef unsigned int ui;
   6          typedef unsigned char uc;
   7          sbit A=P1^0;
   8          sbit k0=P3^0;
   9          sbit k1=P3^1;
  10          sbit k2=P3^2;
  11          sbit k3=P3^3;
  12          sbit led0=P2^0;
  13          sbit led1=P2^1;
  14          sbit SDA=P2^0;
  15          sbit SCL=P2^1;
  16          sbit led2=P2^2;
  17          sbit led3=P2^3;
  18          sbit led4=P2^4;
  19          sbit led5=P2^5;
  20          sbit led6=P2^6;
  21          sbit led7=P2^7;
  22          sbit LSA=P2^2;
  23          sbit LSB=P2^3;
  24          sbit LSC=P2^4;
  25          sbit beep=P1^5;
  26          uc  code du[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  27                                                 0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0};
  28           void Delay10us()
  29          {
  30   1        unsigned char a,b;
  31   1        for(b=1;b>0;b--)
  32   1          for(a=2;a>0;a--);
  33   1      
  34   1      }
  35           void delay(unsigned int i)   //i=1 10us
  36          {
  37   1        while(i--);
  38   1      }
  39          
  40          void I2cStart()
  41          {
  42   1        SDA=1;
  43   1        delay(1);
  44   1        SCL=1;
  45   1        delay(1);
  46   1        SDA=0;
  47   1        delay(1);
  48   1        SCL=0;      
  49   1        delay(1);   
  50   1      }
  51          
  52          void I2cStop()
  53          {
  54   1        SDA=0;
C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 2   

  55   1        delay(1);
  56   1        SCL=1;
  57   1        delay(1);
  58   1        SDA=1;
  59   1        delay(1);   
  60   1      }
  61          
  62          unsigned char I2cSendByte(unsigned char dat)
  63          {
  64   1        unsigned char a=0,b=0;//最大255，一个机器周期为1us，最大延时255us。   
  65   1        for(a=0;a<8;a++)//要发送8位，从最高位开始
  66   1        {
  67   2          SDA=dat>>7; 
  68   2          dat=dat<<1;
  69   2          delay(1);
  70   2          SCL=1;
  71   2          delay(1);//建立时间>4.7us
  72   2          SCL=0;
  73   2          delay(1);//时间大于4us    
  74   2        }
  75   1        SDA=1;
  76   1        delay(1);
  77   1        SCL=1;
  78   1        while(SDA)//等待应答，也就是等待从设备把SDA拉低
  79   1        {
  80   2          b++;
  81   2          if(b>200)  //如果超过2000us没有应答发送失败，或者为非应答，表示接收结束
  82   2          {
  83   3            SCL=0;
  84   3            delay(1);
  85   3            return 0;
  86   3          }
  87   2        }
  88   1        SCL=0;
  89   1        delay(1);
  90   1        return 1;   
  91   1      }
  92          
  93          unsigned char I2cReadByte()
  94          {
  95   1        unsigned char a=0,dat=0;
  96   1        SDA=1;      //起始和发送一个字节之后SCL都是0
  97   1        delay(1);
  98   1        for(a=0;a<8;a++)//接收8个字节
  99   1        {
 100   2          SCL=1;
 101   2          delay(1);
 102   2          dat<<=1;
 103   2          dat|=SDA;
 104   2          delay(1);
 105   2          SCL=0;
 106   2          delay(1);
 107   2        }
 108   1        return dat;   
 109   1      }
 110          
 111          void At24c02Write(unsigned char addr,unsigned char dat)
 112          {
 113   1        I2cStart();
 114   1        I2cSendByte(0xa0);//发送写器件地址
 115   1        I2cSendByte(addr);//发送要写入内存地址
 116   1        I2cSendByte(dat); //发送数据
C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 3   

 117   1        I2cStop();
 118   1      
 119   1      }
 120          
 121          unsigned char At24c02Read(unsigned char addr)
 122          {
 123   1        unsigned char num;
 124   1        I2cStart();
 125   1        I2cSendByte(0xa0); //发送写器件地址
 126   1        I2cSendByte(addr); //发送要读取的地址
 127   1        I2cStart();
 128   1        I2cSendByte(0xa1); //发送读器件地址
 129   1        num=I2cReadByte(); //读取数据
 130   1        I2cStop();
 131   1        return num; 
 132   1      }
 133          
 134          void we(char i)   //0~7
 135          {
 136   1        switch(i)
 137   1        {
 138   2          case 0:LSA=0,LSB=0,LSC=0;break;
 139   2          case 1:LSA=1,LSB=0,LSC=0;break;
 140   2          case 2:LSA=0,LSB=1,LSC=0;break;
 141   2          case 3:LSA=1,LSB=1,LSC=0;break;
 142   2          case 4:LSA=0,LSB=0,LSC=1;break;
 143   2          case 5:LSA=1,LSB=0,LSC=1;break;
 144   2          case 6:LSA=0,LSB=1,LSC=1;break;
 145   2          case 7:LSA=1,LSB=1,LSC=1;
 146   2        }
 147   1      }
 148          ui th1,tl1,th0,tl0;
 149          void timer0(ui t)    //      t  ms
 150          {
 151   1        TMOD=0X01;
 152   1        th0=(65536-1000*t)/256;
 153   1        tl0=(65536-1000*t)%256;
 154   1        TH0=th0;
 155   1        TL0=tl0;
 156   1        ET0=1;
 157   1        EA=1;
 158   1        TR0=1;  
 159   1      }
 160          
 161          void timer1(ui t)      //  t    ms
 162          {
 163   1         TMOD=0X01;
 164   1        th1=(65536-1000*t)/256;
 165   1        tl1=(65536-1000*t)%256;
 166   1        TH1=th1;
 167   1        TL1=tl1;
 168   1        ET0=1;
 169   1        EA=1;
 170   1        TR0=1;  
 171   1      }
 172          
 173          void uart ()      //4800
 174          {
 175   1         TMOD=0x20;
 176   1        PCON=0X80;      
 177   1        TH1=0XF3;     
 178   1        TL1=0XF3;
C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 4   

 179   1         TR1=1;
 180   1         SCON=0x50;
 181   1         EA=1;
 182   1         ES=1;
 183   1      }
 184          void display(uc j,ui t)     // j   we,  t    num
 185          {
 186   1        char n[8],i,m=1;
 187   1        for(i=0;i<j;i++)
 188   1        {
 189   2          n[i]=t%10;
 190   2          t=t/10;
 191   2        }
 192   1        for(i=j;i>0;i--)
 193   1        { 
 194   2          if(n[i]==0)   n[i]=16;
 195   2          if( n[i-1]!=0)   break;
 196   2        }
 197   1        for(i=j-1;i>=0;i--)
 198   1        {
 199   2           P0=0;
 200   2          we(i);
 201   2          m=n[i];
 202   2          P0=du[m];
 203   2          delay(100);
 204   2          //delay(1000);
 205   2          }
 206   1      }
 207             bit keysta;
 208             uc keynum=-1;
 209          int key()       //key()
 210          {
 211   1        char a=0;
 212   1        P1=0x0f;
 213   1        if(P1!=0x0f)
 214   1        {
 215   2          delay(1000);
 216   2          if(P1!=0x0f)
 217   2          { 
 218   3            keysta=1;
 219   3            P1=0X0F;
 220   3            switch(P1)
 221   3            {
 222   4              case(0X07): keynum=0;break;
 223   4              case(0X0b): keynum=1;break;
 224   4              case(0X0d): keynum=2;break;
 225   4              case(0X0e): keynum=3;break;
 226   4            }
 227   3            
 228   3            P1=0XF0;
 229   3            switch(P1)
 230   3            {
 231   4              case(0X70):  keynum=keynum;break;
 232   4              case(0Xb0): keynum=keynum+4;break;
 233   4              case(0Xd0):  keynum=keynum+8;break;
 234   4              case(0Xe0): keynum=keynum+12;break;
 235   4            }
 236   3            while((a<50)&&(P1!=0xf0))  
 237   3            {
 238   4              delay(1000);
 239   4              a++;
 240   4            } 
C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 5   

 241   3            return keynum;
 242   3             
 243   3          }
 244   2          else return -1;
 245   2        }
 246   1          else return -1;
 247   1          }
 248            uc t=0,k=0,c[20],i=0; 
 249            bit flag=0;
 250          void main()
 251          {
 252   1           
 253   1            uart();
 254   1            //if(At24c02Read(1)==0)    flag=1;
 255   1            while(1)
 256   1            {
 257   2               if(RI==1)
 258   2               {
 259   3                  t=SBUF;
 260   3                  At24c02Write(22,t);
 261   3                }
 262   2                if(k0==0)
 263   2                {
 264   3                    t=  At24c02Read(22);
 265   3                    SBUF=t;
 266   3                }
 267   2                }
 268   1              /* key();
 269   1               if(keynum==0)  t++;
 270   1               if(keynum==1) At24c02Write(22,t);
 271   1                 if(keynum==2)    t=  At24c02Read(22);
 272   1                 keynum=-1;
 273   1                 P2=t;
 274   1            }
 275   1            */
 276   1            while(1)
 277   1            {
 278   2          //  led7=flag;
 279   2            if(RI==1)
 280   2            {
 281   3            
 282   3            for(i=0;i<20;i++)
 283   3            {
 284   4                while(!RI);
 285   4                RI=0;
 286   4                c[i]=SBUF;
 287   4                At24c02Write(i+2,c[i]);
 288   4            }
 289   3            //At24c02Write(1,0);
 290   3            while(1)   {beep=~beep;delay(100);}
 291   3            }
 292   2            if(k1==0) {delay(1000);if(k1==0) led7=0, flag=1;}
 293   2            if(TI==1|flag)
 294   2            {
 295   3      
 296   3             for(i=0;i<20;i++)
 297   3            {
 298   4                while(!TI|flag);
 299   4                flag=0;
 300   4                TI=0;
 301   4                c[i]= At24c02Read(i+2);
 302   4                SBUF=c[i];
C51 COMPILER V9.54   TASK_4                                                                12/19/2018 16:42:44 PAGE 6   

 303   4              }
 304   3              
 305   3            }
 306   2            
 307   2            
 308   2         }
 309   1      }
 310          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    870    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
